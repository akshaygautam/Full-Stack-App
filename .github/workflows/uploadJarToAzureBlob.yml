name: Upload JAR to Azure VM and Run

on:
  push:
    branches:
      - main

jobs:
  upload-jar-and-run-on-azure-vm:
    runs-on: ubuntu-latest
    env:
      AZURE_VM_SSH_HOST: ${{ secrets.AZURE_VM_SSH_HOST }}
      AZURE_VM_SSH_USERNAME: ${{ secrets.AZURE_VM_SSH_USERNAME }}
      AZURE_VM_SSH_PRIVATE_KEY: ${{ secrets.AZURE_VM_SSH_PRIVATE_KEY }}
      AZURE_VM_SSH_PORT: ${{ secrets.AZURE_VM_SSH_PORT }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '21'

      - name: Build Frontend
        run: |
          cd ./frontend &&
          npm install &&
          npm run build

      - name: Clean static folder
        run: |
          rm -rf ./src/main/resources/static
          mkdir -p ./src/main/resources/static
          cp -R ./frontend/build/* ./src/main/resources/static/

      - name: Build and Package with Maven
        run: mvn -q clean package -Pprod

      - name: Store JAR Filename in Source Variable
        id: store_source
        run: |
          echo "::set-output name=source::$(find ./target/ -type f -name 'Full-Stack-App-SNAPSHOT-TIME-*.jar' | head -n 1)"
        shell: bash

      - name: Copy JAR to Azure VM
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.AZURE_VM_SSH_HOST }}
          username: ${{ env.AZURE_VM_SSH_USERNAME }}
          key: ${{ env.AZURE_VM_SSH_PRIVATE_KEY }}
          port: ${{ env.AZURE_VM_SSH_PORT }}
          script: |
            echo "Create directory if it doesn't exist"
            sudo mkdir -p /home/javaapps/fullstackapp/
            echo "Copy JAR file"
            sudo cp ${{ steps.store_source.outputs.source }} /home/javaapps/fullstackapp/
            echo "Run JAR file in silent mode and write logs to a new file"
            nohup sudo java -jar /home/javaapps/fullstackapp/$(basename ${{ steps.store_source.outputs.source }}) > /home/javaapps/fullstackapp/output.log 2>&1 &
          source: ${{ steps.store_source.outputs.source }}
          target: /home/javaapps/fullstackapp/
          debug: true
